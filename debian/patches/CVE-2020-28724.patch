--- a/werkzeug/testsuite/serving.py
+++ b/werkzeug/testsuite/serving.py
@@ -82,6 +82,17 @@ class ServingTestCase(WerkzeugTestCase):
         self.assert_in(b'Werkzeug/' + version.encode('ascii'), rv)
 
     @silencestderr
+    def test_double_slash_path(self):
+        def app(environ, start_response):
+            assert 'fail' not in environ['HTTP_HOST']
+            start_response('200 OK', [('Content-Type', 'text/plain')])
+            return [b'YES']
+
+        server, addr = run_dev_server(app)
+        rv = urlopen('http://' + addr + '//fail').read()
+        self.assert_in(b'YES', rv)
+
+    @silencestderr
     def test_broken_app(self):
         def broken_app(environ, start_response):
             1 // 0
--- a/werkzeug/serving.py
+++ b/werkzeug/serving.py
@@ -109,7 +109,7 @@ class WSGIRequestHandler(BaseHTTPRequest
             if key not in ('HTTP_CONTENT_TYPE', 'HTTP_CONTENT_LENGTH'):
                 environ[key] = value
 
-        if request_url.netloc:
+        if request_url.scheme and request_url.netloc:
             environ['HTTP_HOST'] = request_url.netloc
 
         return environ
