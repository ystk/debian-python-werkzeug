From: David Lord <davidism@gmail.com>
Date: Mon, 24 Jul 2023 15:48:34 +0000
Subject: CVE-2023-23934

Origin: https://github.com/pallets/werkzeug/commit/cf275f42acad1b5950c50ffe8ef58fe62cdce028
Reviewed-by: Sylvain Beucler <beuc@debian.org>
Last-Update: 2023-02-25

Backport note: the test case was modified to reflect a different value
precedence in werkzeug<1.0.0 (otherwise it passes without the patch):
-"==__Host-eq=bad;__Host-eq=good;"
+"__Host-eq=good;==__Host-eq=bad;")),

From 8c2b4b82d0cade0d37e6a88e2cd2413878e8ebd4 Mon Sep 17 00:00:00 2001
From: David Lord <davidism@gmail.com>
Date: Tue, 31 Jan 2023 14:29:34 -0800
Subject: [PATCH] don't strip leading = when parsing cookie
---
 werkzeug/_internal.py      | 13 +++++++++----
 werkzeug/testsuite/http.py |  6 ++++--
 2 files changed, 13 insertions(+), 6 deletions(-)

diff --git a/werkzeug/_internal.py b/werkzeug/_internal.py
index 2290a1f..35c5e09 100644
--- a/werkzeug/_internal.py
+++ b/werkzeug/_internal.py
@@ -44,7 +44,7 @@ _octal_re = re.compile(b'\\\\[0-3][0-7][0-7]')
 _quote_re = re.compile(b'[\\\\].')
 _legal_cookie_chars_re = b'[\w\d!#%&\'~_`><@,:/\$\*\+\-\.\^\|\)\(\?\}\{\=]'
 _cookie_re = re.compile(b"""(?x)
-    (?P<key>[^=]+)
+    (?P<key>[^=]*)
     \s*=\s*
     (?P<val>
         "(?:[^\\\\"]|\\\\.)*" |
@@ -271,18 +271,23 @@ def _cookie_parse_impl(b):
     """Lowlevel cookie parsing facility that operates on bytes."""
     i = 0
     n = len(b)
+    b += b";"
 
     while i < n:
-        match = _cookie_re.search(b + b';', i)
+        match = _cookie_re.match(b, i)
+
         if not match:
             break
 
-        key = match.group('key').strip()
-        value = match.group('val')
         i = match.end(0)
+        key = match.group("key").strip()
+
+        if not key:
+            continue
 
         # Ignore parameters.  We have no interest in them.
         if key.lower() not in _cookie_params:
+            value = match.group("val") or b""
             yield _cookie_unquote(key), _cookie_unquote(value)
 
 
diff --git a/werkzeug/testsuite/http.py b/werkzeug/testsuite/http.py
index 610debb..ad23643 100644
--- a/werkzeug/testsuite/http.py
+++ b/werkzeug/testsuite/http.py
@@ -283,13 +283,15 @@ class HTTPUtilityTestCase(WerkzeugTestCase):
     def test_cookies(self):
         self.assert_strict_equal(
             dict(http.parse_cookie('dismiss-top=6; CP=null*; PHPSESSID=0a539d42abc001cd'
-                              'c762809248d4beed; a=42; b="\\\";"')),
+                                   'c762809248d4beed; a=42; b="\\\";";'
+                                   "__Host-eq=good;==__Host-eq=bad;")),
             {
                 'CP':           u'null*',
                 'PHPSESSID':    u'0a539d42abc001cdc762809248d4beed',
                 'a':            u'42',
                 'dismiss-top':  u'6',
-                'b':            u'\";'
+                'b':            u'\";',
+                "__Host-eq":    u"good",
             }
         )
         self.assert_strict_equal(
